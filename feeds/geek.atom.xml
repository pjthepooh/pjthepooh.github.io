<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PJ the Pooh</title><link href="http://www.pjthepooh.com/" rel="alternate"></link><link href="http://www.pjthepooh.com/feeds/geek.atom.xml" rel="self"></link><id>http://www.pjthepooh.com/</id><updated>2016-09-25T20:20:00-07:00</updated><entry><title>I Chose Pelican</title><link href="http://www.pjthepooh.com/i-chose-pelican.html" rel="alternate"></link><published>2016-09-25T20:20:00-07:00</published><updated>2016-09-25T20:20:00-07:00</updated><author><name>PJ</name></author><id>tag:www.pjthepooh.com,2016-09-25:i-chose-pelican.html</id><summary type="html">&lt;!--Status: draft--&gt;

&lt;p&gt;I have been thinking to make a personal website for awhile but just could not find time to actually work on it. It takes time but I know it is worth it. A month ago, I was struggling on what framework to use, where to host it. In this period, I learned and tried three different frameworks and finally decided what the best for me. &lt;/p&gt;
&lt;h2 id="static-or-dynamic"&gt;Static or Dynamic&lt;/h2&gt;
&lt;p&gt;This was the first question I asked myself. I was biased to a dynamic because I want my web to connect with a database, though it is not necessary. The process of setting up the whole dynamic website would definitely help me explore a area. There are a short way and a long way to accomplish it. The short way is to use a web-hosting service such as Wordpress, Blogger and Weebly; while the long is to build it myself using some web development platform.&lt;/p&gt;
&lt;p&gt;Anyway, I chose static at the end. Below is the why. &lt;/p&gt;
&lt;h2 id="django"&gt;Django&lt;/h2&gt;
&lt;p&gt;One of the main purposes I'm making a web is trying to learn new things through the its process, so of course the drag-and-click feature is not something I would look for. At first I started to learn django. After two weeks following online materials, I was able to make a decent skelton successfully connecting to a database, but I was exhausting and not fulfilled. I think django is an overkill for my website. Although django is great for professional web development, the investment of learning this framework does not give me a quick pay back. The learning process did help me build a good understanding of web development, I gave up though. &lt;/p&gt;
&lt;h2 id="wordpress"&gt;Wordpress&lt;/h2&gt;
&lt;p&gt;Using a hosting server, users are able to SSH the server but do not have permission to install applications. Plus, it is costly compared to other approaches. I decided to give a try and install wordpress in my AWS EC2 micro. That way at least I would have a full control and be able to play around with MySQL. Things went pretty well in the first couple days, but my server began to suffer running out of RAM soon after. In the following week, I kept trying many different ways to optimize the configuration of the web, PHP, and database, nothing seemed to work. I finally moved database to an RDS instance, but my web was still not able be hosted smoothly, loading very slowly and even timing out. As it was too annoying, I decided to move to a static web.   &lt;/p&gt;
&lt;h2 id="pelican"&gt;Pelican&lt;/h2&gt;
&lt;p&gt;For static website, there are several popular platforms, e.g. &lt;a href="https://hexo.io/"&gt;Hexo&lt;/a&gt; (javascript), &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; (ruby) and &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; (python). Users only need to know some basic syntax of the language to start with. I picked pelican simply because it is written in python. All of these frameworks have a large community of developers and users, so there are tons of themes and plugins available. &lt;/p&gt;
&lt;p&gt;The initial setup of Pelican is simple and it will provide a dummy template to begin with; however, I did need to spend some time on customization and settings. With Pelican's simplicity, I can focus on my writing and not being distracted by thinking how to format my post because the theme does all the job for me. If I want to edit the theme, it is easy enough too. So far from writing to deploying a new post I do not need to touch the mouse, which is a pretty smooth process. &lt;/p&gt;
&lt;h2 id="ending"&gt;Ending&lt;/h2&gt;
&lt;p&gt;Last month was all about trial and error. The return was I learned things. Most importantly I built my web with the way like. Of course there are some downsides of using Pelican, but I can bear them. I may write up a post about how to build a blog with Pelican later :) &lt;/p&gt;</summary><category term="blog"></category><category term="pelican"></category><category term="python"></category><category term="web development"></category></entry></feed>